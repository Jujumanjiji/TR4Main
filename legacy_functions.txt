// 3D_GEN.CPP
#define AlterFOV ((void(__cdecl*)(short fov)) 0x0048F9D0)
#define phd_GenerateW2V ((void(__cdecl*)(PHD_3DPOS* viewpos)) 0x0048FDC0)
#define phd_LookAt ((void(__cdecl*)(int xsrc, int ysrc, int zsrc, int xtar, int ytar, int ztar, short roll)) 0x00490110)
#define phd_TranslateRel ((void(__cdecl*)(int x, int y, int z)) 0x00490350)
#define phd_TranslateAbs ((void(__cdecl*)(int x, int y, int z)) 0x00490A10)
#define phd_RotX ((void(__cdecl*)(short ang)) 0x00490400)
#define phd_RotY ((void(__cdecl*)(short ang)) 0x004904B0)
#define phd_RotZ ((void(__cdecl*)(short ang)) 0x00490560)
#define phd_RotYXZpack ((void(__cdecl*)(int ang)) 0x00490610)
#define phd_RotYXZ ((void(__cdecl*)(short y, short x, short z)) 0x00490820)
#define phd_GetVectorAngles ((void(__cdecl*)(int x, int y, int z, short* dest)) 0x00490A90)
#define ScaleCurrentMatrix ((void(__cdecl*)(PHD_VECTOR* scale)) 0x0048FB60)
#define SetupZ ((void(__cdecl*)(int nNear, int nFar)) 0x0048FA90)
#define phd_InitWindow ((void(__cdecl*)(int x, int y, int width, int height, int nearz, int farz, short view_angle)) 0x0048FC10)
#define SetupDXMatrixTransformState ((void(__cdecl*)(void)) 0x00490CF0)
#define SetD3DViewMatrix ((void(__cdecl*)(void)) 0x00490B30)
#define InitD3DMatrix ((void(__cdecl*)(D3DMATRIX* mptr)) 0x00490DD0)
#define SetupDXW2V ((void(__cdecl*)(D3DMATRIX* dest, PHD_MATRIX* pptr)) 0x00490C30)

// DRAW.CPP
#define DrawPhaseGame ((int(__cdecl*)(void)) 0x0044EBA0)
#define DrawEffect ((void(__cdecl*)(short fxNumber)) 0x0044FB10)
#define DrawAnimatingItem ((void(__cdecl*)(ITEM_INFO* item)) 0x0044FF60)
#define InitInterpolate ((void(__cdecl*)(int frac, int rate)) 0x00450520)
#define phd_PopMatrix_I ((void(__cdecl*)(void)) 0x00450560)
#define phd_PushMatrix_I ((void(__cdecl*)(void)) 0x00450590)
#define phd_RotY_I ((void(__cdecl*)(short ang)) 0x004505C0)
#define phd_RotX_I ((void(__cdecl*)(short ang)) 0x004505F0)
#define phd_RotZ_I ((void(__cdecl*)(short ang)) 0x00450620)
#define phd_TranslateRel_I ((void(__cdecl*)(int x, int y, int z)) 0x00450650)
#define phd_TranslateRel_ID ((void(__cdecl*)(int x1, int y1, int z1, int x2, int y2, int z2)) 0x00450690)
#define phd_RotYXZ_I ((void(__cdecl*)(short y, short x, short z)) 0x004506E0)
#define gar_RotYXZsuperpack_I ((void(__cdecl*)(short **pprot1, short **pprot2, int skip)) 0x00450720)
#define gar_RotYXZsuperpack ((void(__cdecl*)(short **pprot, int skip)) 0x00450760)
#define InterpolateMatrix ((void(__cdecl*)(void)) 0x00450840)
#define InterpolateArmMatrix ((void(__cdecl*)(void)) 0x00450AB0)
#define phd_PutPolygons_I ((void(__cdecl*)(short* ptr, int clip)) 0x00450810)
#define GetFrames ((int(__cdecl*)(ITEM_INFO* item, short *frame[], int *rate)) 0x00450DC0)
#define GetBoundsAccurate ((short*(__cdecl*)(ITEM_INFO* item)) 0x00450E60)
#define GetBestFrame ((short*(__cdecl*)(ITEM_INFO* item)) 0x00450EE0)

// SETUP.CPP
#define InitialiseObjects ((void(__cdecl*)(void)) 0x0045C0D0)
#define BaddyObjects  ((void(__cdecl*)(void)) 0x0045C1E0)
#define ObjectObjects ((void(__cdecl*)(void)) 0x0045E1F0)
#define TrapObjects  ((void(__cdecl*)(void)) 0x0045DC10)
#define GetCarriedItems  ((void(__cdecl*)(void)) 0x0045EB40)
#define GetAIPickups  ((void(__cdecl*)(void)) 0x0045EC50)

// LARA2GUN.CPP
#define set_arm_info ((void(__cdecl*)(int weapon_type)) 0x0042B7C0)
#define draw_pistol_meshes ((void(__cdecl*)(int weapon_type)) 0x0042BB20)
#define undraw_pistols_left ((void(__cdecl*)(int weapon_type)) 0x0042BB70)
#define undraw_pistols_right ((void(__cdecl*)(int weapon_type)) 0x0042BBB0)
#define draw_pistols ((void(__cdecl*)(int weapon_type)) 0x0042B720)
#define undraw_pistols ((void(__cdecl*)(int weapon_type)) 0x0042B840)
#define ready_pistols ((void(__cdecl*)(int weapon_type)) 0x0042BAB0)
#define pistol_handler ((void(__cdecl*)(int weapon_type)) 0x0042BBF0)
#define animate_pistols ((void(__cdecl*)(int weapon_type)) 0x0042BE40)

// LARA1GUN.CPP
#define draw_shotgun_meshes ((void(__cdecl*)(int weapon_type)) 0x00428E40)
#define undraw_shotgun_meshes ((void(__cdecl*)(int weapon_type)) 0x00428E70)
#define ready_shotgun ((void(__cdecl*)(int weapon_type)) 0x00428EA0)
#define draw_shotgun ((void(__cdecl*)(int weapon_type)) 0x0042AE50)
#define undraw_shotgun  ((void(__cdecl*)(int weapon_type)) 0x0042AFE0)
#define shotgun_handler  ((void(__cdecl*)(int weapon_type)) 0x00428F10)
#define animate_shotgun  ((void(__cdecl*)(int weapon_type)) 0x0042B100)

// LARAFIRE.CPP
#define weapon_object ((int(__cdecl*)(int weapon_type)) 0x0042EA70)
#define weapon_meshes ((int(__cdecl*)(int weapon_type)) 0x0042EAC0)
#define fire_shotgun ((void(__cdecl*)(void)) 0x00429260)
#define fire_grenade ((void(__cdecl*)(void)) 0x00429480)
#define fire_crossbow ((void(__cdecl*)(PHD_3DPOS* haveDefinedPos)) 0x0042A270)
#define FireCrossbowBoltFromLaserSight ((void(__cdecl*)(GAME_VECTOR* dest, GAME_VECTOR* src)) 0x0044D820)
#define InitialiseNewWeapons ((void(__cdecl*)(void)) 0x0042DDF0)
#define GetCurrentAmmo ((short*(__cdecl*)(int weapon_type)) 0x0042F480)
#define LaraTargetInfo ((void(__cdecl*)(WEAPON_INFO* winfo)) 0x0042DF30)
#define LaraGetNewTarget ((void(__cdecl*)(WEAPON_INFO* winfo)) 0x0042E0D0)
#define AimWeapon ((void(__cdecl*)(WEAPON_INFO* winfo, LARA_ARM* arm)) 0x0042E560)
#define find_target_point ((void(__cdecl*)(ITEM_INFO* item, GAME_VECTOR* pos)) 0x0042E4A0)
#define FireWeapon ((int(__cdecl*)(int weapon_type, ITEM_INFO* target, ITEM_INFO* src, short angles[2])) 0x0042E630)
#define GetTargetOnLOS ((int(__cdecl*)(GAME_VECTOR *dest, GAME_VECTOR *src, BOOL drawtarget, BOOL firing)) 0x0044D890)
#define HitTarget ((void(__cdecl*)(ITEM_INFO* item, GAME_VECTOR* src, int damage, int flags)) 0x0042E920)
#define LaraGun ((void(__cdecl*)(void)) 0x0042D840)

// LARACONTROL.CPP
#define LaraAboveWater ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00420B10)
#define LaraSurface ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00431AA0)
#define LaraUnderWater ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x004323A0)
#define LaraWaterCurrent ((void(__cdecl*)(COLL_INFO* coll)) 0x00432DA0)

// LARAUTILS.CPP
#define LaraFloorFront ((short(__cdecl*)(ITEM_INFO* item, short angle, int distance)) 0x00421620)
#define LaraCeilingFront ((short(__cdecl*)(ITEM_INFO* item, short angle, int distance, int height)) 0x00420A80)
#define LaraHitCeiling ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00422390)
#define LaraHangTest ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x004230E0)
#define LaraDeflectEdge ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00422400)
#define LaraDeflectEdgeDuck ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00421880)
#define LaraDeflectEdgeJump ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00422C50)
#define LaraFallen ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00420FE0)
#define IsValidHangPos ((int(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00426600)
#define LaraHangRightCornerTest ((int(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00426230)
#define LaraHangLeftCornerTest ((int(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x004266E0)
#define LaraClimbLeftCornerTest ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x0042CEE0)
#define LaraClimbRightCornerTest ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x0042D160)
#define LaraSlideEdgeJump ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x004259C0)
#define LaraTestClimbStance ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00422810)
#define LaraTestEdgeCatch ((int(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll, int* edge)) 0x00421DE0)
#define LaraTestHangOnClimbWall ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00421E90)
#define LaraSlideSlope ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00428470)
#define LaraCollideJump ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00428B20)
#define LaraCheckForLetGo ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x0042C980)
#define LaraTestClimbUpPos ((int(__cdecl*)(ITEM_INFO* item, int front, int right, int* shift, int* ledge)) 0x0042CA60)
#define LaraTestClimbPos ((int(__cdecl*)(ITEM_INFO* item, int front, int right, int origin, int height, int* shift)) 0x0042C3C0)
#define LaraTestClimb ((int(__cdecl*)(int x, int y, int z, int xfront, int zfront, int item_height, short item_room, int* shift)) 0x0042C470)
#define LaraDoClimbLeftRight ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll, int result, int shift)) 0x0042CD20)
#define LaraTestWaterClimbOut ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00431E90)
#define LaraTestWaterStepOut ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x004321B0)
#define LaraTestWaterDepth ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00432A30)
#define LaraLandedBad ((bool(__cdecl*)(ITEM_INFO* item)) 0x00422BE0)
#define LaraCollideStop ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x004229D0)
#define LaraSwimCollision ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x004328E0)
#define LaraSurfaceCollision ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x004320B0)
#define TestLaraSlide ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00420EA0)
#define TestLaraVault ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00422480)
#define TestMonkeyLeft ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x004236B0)
#define TestMonkeyRight ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x004237B0)
#define TestHangSwingIn ((BOOL(__cdecl*)(ITEM_INFO* item, short angle)) 0x00421FF0)
#define TestWall ((BOOL(__cdecl*)(ITEM_INFO* item, int front, int right, int height)) 0x004228D0)
#define SwimTurn ((void(__cdecl*)(ITEM_INFO* item)) 0x00432690)
#define MonkeySwingFall ((void(__cdecl*)(ITEM_INFO* item)) 0x00422E50)
#define MonkeySwingSnap ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00423660)
#define FallFromRope ((void(__cdecl*)(ITEM_INFO* item)) 0x004241D0)
#define UpdateRopeSwing ((void(__cdecl*)(ITEM_INFO* item)) 0x00424320)
#define ApplyVelocityToRope ((void(__cdecl*)(int node, short angle, short n)) 0x00424150)
#define SetPendulumVelocity ((void(__cdecl*)(int x, int y, int z)) 0x004597D0)
#define JumpOffRope ((void(__cdecl*)(ITEM_INFO* item)) 0x00424820)
#define SetCornerAnim ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll, short angle, short flip)) 0x00426C50)
#define CanLaraHangSideways ((BOOL(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll, short angle)) 0x00426AB0)
#define GetDirOctant ((short(__cdecl*)(int angle)) 0x00423780)
#define GetClimbTrigger ((short(__cdecl*)(int x, int y, int z, short roomNumber)) 0x0042D7D0)
#define SnapLaraToEdgeOfBlock ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll, short angle)) 0x004235B0)
#define GetLaraCollisionInfo ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) 0x00422350)
#define AnimateLara ((void(__cdecl*)(ITEM_INFO* item)) 0x00430B60)

// LARA_AS_ROUTINE.CPP
#define LARA_ROUTINE(x) ((void(__cdecl*)(ITEM_INFO* item, COLL_INFO* coll)) x)

#define lara_as_walk LARA_ROUTINE(0x00425AC0)
#define lara_as_run  LARA_ROUTINE(0x00425B60)
#define lara_as_stop LARA_ROUTINE(0x00424A60)
#define lara_as_forwardjump LARA_ROUTINE(0x00425480)
#define lara_as_fastback LARA_ROUTINE(0x00425D10)
#define lara_as_turnr LARA_ROUTINE(0x00425D70)
#define lara_as_turnl LARA_ROUTINE(0x00425E20)
#define lara_as_death LARA_ROUTINE(0x00425EC0)
#define lara_as_fastfall LARA_ROUTINE(0x00425F10)
#define lara_as_hang LARA_ROUTINE(0x00425F50)
#define lara_as_reach LARA_ROUTINE(0x00425630)
#define lara_as_splat LARA_ROUTINE(0x00426EB0)
#define lara_as_tread LARA_ROUTINE(0x004327A0)
#define lara_as_compress LARA_ROUTINE(0x00426EC0)
#define lara_as_back LARA_ROUTINE(0x00426FD0)
#define lara_as_swim LARA_ROUTINE(0x00432620)
#define lara_as_glide LARA_ROUTINE(0x00432720)
#define lara_as_null LARA_ROUTINE(0x00427060)
#define lara_as_fastturn LARA_ROUTINE(0x00427070)
#define lara_as_stepright LARA_ROUTINE(0x004270C0)
#define lara_as_stepleft LARA_ROUTINE(0x00427150)
#define lara_as_slide LARA_ROUTINE(0x004271E0)
#define lara_as_backjump LARA_ROUTINE(0x00427210)
#define lara_as_rightjump LARA_ROUTINE(0x00427260)
#define lara_as_leftjump LARA_ROUTINE(0x004272A0)
#define lara_as_upjump LARA_ROUTINE(0x00425110)
#define lara_as_fallback LARA_ROUTINE(0x004272E0)
#define lara_as_hangleft LARA_ROUTINE(0x00426B50)
#define lara_as_hangright LARA_ROUTINE(0x00426BD0)
#define lara_as_slideback LARA_ROUTINE(0x00427310)
#define lara_as_surftread LARA_ROUTINE(0x00431DA0)
#define lara_as_surfswim LARA_ROUTINE(0x00431C10)
#define lara_as_dive LARA_ROUTINE(0x00432830)
#define lara_as_pushblock LARA_ROUTINE(0x00427330)
#define lara_as_pullblock LARA_ROUTINE(0x00427370)
#define lara_as_ppready LARA_ROUTINE(0x004273B0)
#define lara_as_pickup LARA_ROUTINE(0x004273E0)
#define lara_as_switchon LARA_ROUTINE(0x00427480)
#define lara_as_usekey LARA_ROUTINE(0x004274C0)
#define lara_as_usepuzzle LARA_ROUTINE(0x00427500)
#define lara_as_uwdeath LARA_ROUTINE(0x00432850)
#define lara_as_special LARA_ROUTINE(0x00427580)
#define lara_as_surfback LARA_ROUTINE(0x00431C80)
#define lara_as_surfleft LARA_ROUTINE(0x00431CE0)
#define lara_as_surfright LARA_ROUTINE(0x00431D40)
#define lara_as_swandive LARA_ROUTINE(0x004275A0)
#define lara_as_fastdive LARA_ROUTINE(0x004275E0)
#define lara_as_waterout LARA_ROUTINE(0x00427640)
#define lara_as_climbstnc LARA_ROUTINE(0x0042C6C0)
#define lara_as_climbup LARA_ROUTINE(0x0042D470)
#define lara_as_climbleft LARA_ROUTINE(0x0042CC80)
#define lara_as_climbend LARA_ROUTINE(0x0042D7A0)
#define lara_as_climbright LARA_ROUTINE(0x0042D3D0)
#define lara_as_climbdown LARA_ROUTINE(0x0042D5E0)
#define lara_as_wade LARA_ROUTINE(0x00427660)
#define lara_as_waterroll LARA_ROUTINE(0x004328B0)
#define lara_as_pickupflare LARA_ROUTINE(0x00427420)
#define lara_as_deathslide LARA_ROUTINE(0x00427730)
#define lara_as_duck LARA_ROUTINE(0x00421040)
#define lara_as_dash LARA_ROUTINE(0x004220B0)
#define lara_as_dashdive LARA_ROUTINE(0x00422A90)
#define lara_as_hang2 LARA_ROUTINE(0x00422DE0)
#define lara_as_monkeyswing LARA_ROUTINE(0x00423880)
#define lara_as_monkeyl LARA_ROUTINE(0x00423A60)
#define lara_as_monkeyr LARA_ROUTINE(0x00423B30)
#define lara_as_monkey180 LARA_ROUTINE(0x00423D20)
#define lara_as_all4s LARA_ROUTINE(0x00421210)
#define lara_as_crawl LARA_ROUTINE(0x004216A0)
#define lara_as_hangturnl LARA_ROUTINE(0x00423C00)
#define lara_as_hangturnr LARA_ROUTINE(0x00423CE0)
#define lara_as_all4turnl LARA_ROUTINE(0x00421900)
#define lara_as_all4turnr LARA_ROUTINE(0x004219B0)
#define lara_as_crawlb LARA_ROUTINE(0x00421A10)
#define lara_as_controlled LARA_ROUTINE(0x004277D0)
#define lara_as_ropel LARA_ROUTINE(0x00424620)
#define lara_as_roper LARA_ROUTINE(0x00424650)
#define lara_as_controlledl LARA_ROUTINE(0x004278B0)
#define lara_as_poleleft LARA_ROUTINE(0x00423EE0)
#define lara_as_poleright LARA_ROUTINE(0x00423F20)
#define lara_as_pulley LARA_ROUTINE(0x00427940)
#define lara_as_duckl LARA_ROUTINE(0x00420D50)
#define lara_as_duckr LARA_ROUTINE(0x00420D80)
#define lara_as_extcornerl LARA_ROUTINE(0x00426D70)
#define lara_as_extcornerr LARA_ROUTINE(0x00426DC0)
#define lara_as_intcornerl LARA_ROUTINE(0x00426E10)
#define lara_as_intcornerr LARA_ROUTINE(0x00426E60)
#define lara_as_rope LARA_ROUTINE(0x004241A0)
#define lara_as_climbrope LARA_ROUTINE(0x004248E0)
#define lara_as_climbroped LARA_ROUTINE(0x00424950)

// LARA_COL_ROUTINE.CPP
#define lara_default_col LARA_ROUTINE(0x00428AD0)
#define lara_col_walk LARA_ROUTINE(0x00427A40)
#define lara_col_run LARA_ROUTINE(0x00427C30)
#define lara_col_stop LARA_ROUTINE(0x00425070)
#define lara_col_forwardjump  LARA_ROUTINE(0x00425550)
#define lara_col_fastback LARA_ROUTINE(0x00427E00)
#define lara_col_turn LARA_ROUTINE(0x00427EF0)
#define lara_col_death LARA_ROUTINE(0x00427FD0)
#define lara_col_fastfall LARA_ROUTINE(0x00428040)
#define lara_col_hang LARA_ROUTINE(0x00425FA0)
#define lara_col_reach LARA_ROUTINE(0x00425650)
#define lara_col_splat LARA_ROUTINE(0x004280F0)
#define lara_col_tread LARA_ROUTINE(0x00432B30)
#define lara_col_compress LARA_ROUTINE(0x00428160)
#define lara_col_back LARA_ROUTINE(0x00428210)
#define lara_col_swim LARA_ROUTINE(0x004328C0)
#define lara_col_glide LARA_ROUTINE(0x00432B10)
#define lara_col_step LARA_ROUTINE(0x00428350)
#define lara_col_roll LARA_ROUTINE(0x004286D0)
#define lara_col_slide LARA_ROUTINE(0x00428450)
#define lara_col_backjump LARA_ROUTINE(0x00428580)
#define lara_col_rightjump LARA_ROUTINE(0x004285B0)
#define lara_col_leftjump LARA_ROUTINE(0x004285E0)
#define lara_col_upjump LARA_ROUTINE(0x00425130)
#define lara_col_fallback LARA_ROUTINE(0x00428610)
#define lara_col_hangleft LARA_ROUTINE(0x00426B90)
#define lara_col_hangright LARA_ROUTINE(0x00426C10)
#define lara_col_slideback LARA_ROUTINE(0x004286A0)
#define lara_col_surftread LARA_ROUTINE(0x00432340)
#define lara_col_surfswim LARA_ROUTINE(0x00431E60)
#define lara_col_dive LARA_ROUTINE(0x00432B50)
#define lara_col_uwdeath LARA_ROUTINE(0x00432B70)
#define lara_col_roll2 LARA_ROUTINE(0x00428770)
#define lara_col_surfback LARA_ROUTINE(0x004322B0)
#define lara_col_surfleft LARA_ROUTINE(0x004322E0)
#define lara_col_surfright LARA_ROUTINE(0x00432310)
#define lara_col_swandive LARA_ROUTINE(0x00428850)
#define lara_col_fastdive LARA_ROUTINE(0x004288D0)
#define lara_col_climbstnc LARA_ROUTINE(0x0042C770)
#define lara_col_climbup LARA_ROUTINE(0x0042D490)
#define lara_col_climbleft LARA_ROUTINE(0x0042CCC0)
#define lara_col_climbright LARA_ROUTINE(0x0042D410)
#define lara_col_climbdown LARA_ROUTINE(0x0042D600)
#define lara_col_wade LARA_ROUTINE(0x00428960)
#define lara_col_waterroll LARA_ROUTINE(0x00432BD0)
#define lara_col_duck LARA_ROUTINE(0x004210F0)
#define lara_col_dash LARA_ROUTINE(0x00422200)
#define lara_col_dashdive LARA_ROUTINE(0x00422AC0)
#define lara_col_hang2 LARA_ROUTINE(0x00422EB0)
#define lara_col_monkeyswing  LARA_ROUTINE(0x00423930)
#define lara_col_monkeyl LARA_ROUTINE(0x00423AC0)
#define lara_col_monkeyr LARA_ROUTINE(0x00423B90)
#define lara_col_monkey180 LARA_ROUTINE(0x00423D40)
#define lara_col_all4s LARA_ROUTINE(0x00421280)
#define lara_col_crawl LARA_ROUTINE(0x00421770)
#define lara_col_hangturn LARA_ROUTINE(0x00423C40)
#define lara_col_all4turn LARA_ROUTINE(0x00421960)
#define lara_col_crawlb LARA_ROUTINE(0x00421AD0)
#define lara_col_crawl2hang LARA_ROUTINE(0x00421BF0)
#define lara_col_turnswitch LARA_ROUTINE(0x004278D0)
#define lara_col_polestat LARA_ROUTINE(0x00423D60)
#define lara_col_poleup LARA_ROUTINE(0x00423F60)
#define lara_col_poledown LARA_ROUTINE(0x00423FF0)
#define lara_col_duck2 LARA_ROUTINE(0x00420DB0)
#define lara_col_rope LARA_ROUTINE(0x00424270)
#define lara_col_ropefwd LARA_ROUTINE(0x00424680)

// DELSTUFF.CPP
#define CalcLaraMatrices ((void(__cdecl*)(int flags)) 0x0041D010)
//WARNING: contains the weapon render !!!! (it's not in DrawLara() and DrawLaraInt() anymore !)
#define DEL_CalcLaraMatrices_Normal ((void(__cdecl*)(short *frame[2], int *bone, short type)) 0x0041DAF0)
#define DEL_CalcLaraMatrices_Interpolate ((void(__cdecl*)(short *frame1, short *frame2, int frac, int rate, int *bone, short type)) 0x0041E630)

// INVENTORY_2D.CPP
#define show_inventory_2d ((int(__cdecl*)(void)) 0x0043B760) // in the end !!
#define construct_inventory_2d ((void(__cdecl*)(void)) 0x0043B9B0)
#define do_debounced_input ((void(__cdecl*)(void)) 0x0043BC30)
#define DrawThreeDeeObject2D ((void(__cdecl*)(int x, int y, int num, int shade, int xrot, int yrot, int zrot, int bright, int overlay)) 0x0043BD80)
#define DrawInventoryItem ((void(__cdecl*)(ITEM_INFO *item, int shade, int overlay, BOOL shade_flags)) 0x0043BF10)
#define go_and_load_game ((int(__cdecl*)(void)) 0x0043C400)
#define go_and_save_game ((int(__cdecl*)(void)) 0x0043C410)
#define construct_combine_object_list ((void(__cdecl*)(void)) 0x0043C420)
#define insert_object_into_list_combine ((void(__cdecl*)(short num)) 0x0043C5A0)
#define construct_object_list ((void(__cdecl*)(void)) 0x0043C610)
#define insert_object_into_list_inventory ((void(__cdecl*)(short num)) 0x0043CA90)
#define draw_current_object_list ((void(__cdecl*)(int ringnum)) 0x0043CAE0)
#define handle_object_changeover ((void(__cdecl*)(void)) 0x0043D450)
#define setup_ammo_selector ((void(__cdecl*)(void)) 0x0043D470)
#define fade_ammo_selector ((void(__cdecl*)(void)) 0x0043DE30)
#define draw_ammo_selector ((void(__cdecl*)(void)) 0x0043DED0)
#define spinback ((void(__cdecl*)(WORD* angle)) 0x0043E140)
#define update_laras_weapons_status ((void(__cdecl*)(void)) 0x0043E1B0)
#define is_item_currently_combinable ((BOOL(__cdecl*)(short inv_item)) 0x0043E250)
#define have_i_got_item ((BOOL(__cdecl*)(short inv_item)) 0x0043E2F0)
#define do_these_objects_combine ((BOOL(__cdecl*)(short item_a, short item_b)) 0x0043E320)
#define combine_these_two_objects ((void(__cdecl*)(short item_a, short item_b)) 0x0043E360)
#define seperate_object ((void(__cdecl*)(short inv_item)) 0x0043E3D0)
#define combine_revolver ((void(__cdecl*)(int flag)) 0x0043E420)
#define combine_crossbow ((void(__cdecl*)(int flag)) 0x0043E480)
#define combine_puzzle_item1 ((void(__cdecl*)(int flag)) 0x0043E4E0)
#define combine_puzzle_item2 ((void(__cdecl*)(int flag)) 0x0043E500)
#define combine_puzzle_item3 ((void(__cdecl*)(int flag)) 0x0043E520)
#define combine_puzzle_item4 ((void(__cdecl*)(int flag)) 0x0043E540)
#define combine_puzzle_item5 ((void(__cdecl*)(int flag)) 0x0043E560)
#define combine_puzzle_item6 ((void(__cdecl*)(int flag)) 0x0043E580)
#define combine_puzzle_item7 ((void(__cdecl*)(int flag)) 0x0043E5A0)
#define combine_puzzle_item8 ((void(__cdecl*)(int flag)) 0x0043E5C0)
#define combine_key_item1 ((void(__cdecl*)(int flag)) 0x0043E5E0)
#define combine_key_item2 ((void(__cdecl*)(int flag)) 0x0043E600)
#define combine_key_item3 ((void(__cdecl*)(int flag)) 0x0043E620)
#define combine_key_item4 ((void(__cdecl*)(int flag)) 0x0043E640)
#define combine_key_item5 ((void(__cdecl*)(int flag)) 0x0043E660)
#define combine_key_item6 ((void(__cdecl*)(int flag)) 0x0043E680)
#define combine_key_item7 ((void(__cdecl*)(int flag)) 0x0043E6A0)
#define combine_key_item8 ((void(__cdecl*)(int flag)) 0x0043E6C0)
#define combine_pickup_item1 ((void(__cdecl*)(int flag)) 0x0043E6E0)
#define combine_pickup_item2 ((void(__cdecl*)(int flag)) 0x0043E700)
#define combine_pickup_item3 ((void(__cdecl*)(int flag)) 0x0043E720)
#define combine_pickup_item4 ((void(__cdecl*)(int flag)) 0x0043E740)
#define combine_clockwork ((void(__cdecl*)(int flag)) 0x0043E760)
#define combine_waterskin ((void(__cdecl*)(int flag)) 0x0043E770)
#define setup_objectlist_startposition_invitem ((void(__cdecl*)(short inv_item)) 0x0043E830)
#define setup_objectlist_startposition_objnumber ((void(__cdecl*)(short object_number)) 0x0043E860)
#define use_current_item ((void(__cdecl*)(void)) 0x0043E8A0)
#define picked_up_object ((void(__cdecl*)(short object_number)) 0x0043EB80)
#define have_i_got_object ((BOOL(__cdecl*)(short object_number)) 0x0043EF60)
#define search_detector ((void(__cdecl*)(short object_number)) 0x0043F050)
#define convert_obj_to_invobj ((int(__cdecl*)(short object_number)) 0x0043F150)
#define do_compass_mode ((void(__cdecl*)(void)) 0x0043F180)
#define do_examine_mode ((void(__cdecl*)(void)) 0x0043F1E0)
#define give_lara_items_cheat ((void(__cdecl*)(void)) 0x0043F4C0) not used anymore !!

// SPHERE.CPP
#define GetLaraJointAbsPosition ((void(__cdecl*)(PHD_VECTOR* pos, int joint)) 0x0041D9A0)

// DELTAPAK.CPP
#define frigup_lara ((void(__cdecl*)(void)) 0x0046B140)

// LARAMISC.CPP
#define InitialiseLaraLoad INITIALISE(0x00430EB0)

// COLLIDE.CPP
#define UpdateLaraRoom ((void(__cdecl*)(ITEM_INFO* item, int height)) 0x00446FB0)
#define TestLaraPosition ((BOOL(__cdecl*)(BOUNDARY* bounds, ITEM_INFO* item, ITEM_INFO* laraitem)) 0x00447F30)
#define AlignLaraPosition ((void(__cdecl*)(PHD_VECTOR* pos, ITEM_INFO* item, ITEM_INFO* laraitem)) 0x00448070)
#define MoveLaraPosition ((BOOL(__cdecl*)(PHD_VECTOR* pos, ITEM_INFO* item, ITEM_INFO* laraitem)) 0x004483E0)
#define Move3DPosTo3DPos ((BOOL(__cdecl*)(PHD_3DPOS* src, PHD_3DPOS* dest, int velocity, short angadd)) 0x00448140)